<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.fhypayaso.tittytainment.dao.CommentMapper">
  <resultMap id="BaseResultMap" type="com.fhypayaso.tittytainment.pojo.entity.Comment">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="post_id" jdbcType="BIGINT" property="postId" />
    <result column="user_id" jdbcType="BIGINT" property="userId" />
    <result column="like_num" jdbcType="BIGINT" property="likeNum" />
    <result column="status" jdbcType="BIT" property="status" />
    <result column="created_time" jdbcType="TIMESTAMP" property="createdTime" />
    <result column="updated_time" jdbcType="TIMESTAMP" property="updatedTime" />
    <result column="content" jdbcType="LONGVARCHAR" property="content" />
  </resultMap>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from ttmt_comment
    where id = #{id,jdbcType=BIGINT}
  </delete>

  <delete id="deleteByPostId" parameterType="java.lang.Long">
    delete from ttmt_comment
    where post_id = #{postId,jdbcType=BIGINT}
  </delete>



  <insert id="insert" parameterType="com.fhypayaso.tittytainment.pojo.entity.Comment">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Long">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into ttmt_comment (post_id, user_id, like_num, 
      `status`, created_time, updated_time, 
      content)
    values (#{postId,jdbcType=BIGINT}, #{userId,jdbcType=BIGINT}, #{likeNum,jdbcType=BIGINT}, 
      #{status,jdbcType=BIT}, #{createdTime,jdbcType=TIMESTAMP}, #{updatedTime,jdbcType=TIMESTAMP}, 
      #{content,jdbcType=LONGVARCHAR})
  </insert>
  <update id="updateByPrimaryKey" parameterType="com.fhypayaso.tittytainment.pojo.entity.Comment">
    update ttmt_comment
    set post_id = #{postId,jdbcType=BIGINT},
      user_id = #{userId,jdbcType=BIGINT},
      like_num = #{likeNum,jdbcType=BIGINT},
      `status` = #{status,jdbcType=BIT},
      created_time = #{createdTime,jdbcType=TIMESTAMP},
      updated_time = #{updatedTime,jdbcType=TIMESTAMP},
      content = #{content,jdbcType=LONGVARCHAR}
    where id = #{id,jdbcType=BIGINT}
  </update>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select id, post_id, user_id, like_num, `status`, created_time, updated_time, content
    from ttmt_comment
    where id = #{id,jdbcType=BIGINT}
  </select>

  <select id="selectByPost" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select id, post_id, user_id, like_num, `status`, created_time, updated_time, content
    from ttmt_comment
    where post_id = #{postId,jdbcType=BIGINT}
  </select>

  <select id="selectAll" resultMap="BaseResultMap">
    select id, post_id, user_id, like_num, `status`, created_time, updated_time, content
    from ttmt_comment
  </select>
</mapper>