<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.fhypayaso.tittytainment.dao.LikeMapper">
    <resultMap id="BaseResultMap" type="com.fhypayaso.tittytainment.pojo.entity.Like">
        <id column="id" jdbcType="BIGINT" property="id"/>
        <result column="type" jdbcType="INTEGER" property="type"/>
        <result column="post_id" jdbcType="BIGINT" property="postId"/>
        <result column="comment_id" jdbcType="BIGINT" property="commentId"/>
        <result column="user_id" jdbcType="BIGINT" property="userId"/>
        <result column="status" jdbcType="BIT" property="status"/>
        <result column="created_time" jdbcType="TIMESTAMP" property="createdTime"/>
        <result column="updated_time" jdbcType="TIMESTAMP" property="updatedTime"/>
    </resultMap>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
        delete
        from ttmt_like
        where id = #{id,jdbcType=BIGINT}
    </delete>
    <insert id="insert" parameterType="com.fhypayaso.tittytainment.pojo.entity.Like">
        <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Long">
            SELECT LAST_INSERT_ID()
        </selectKey>
        insert into ttmt_like (`type`, post_id, comment_id,
        user_id, `status`, created_time,
        updated_time)
        values (#{type,jdbcType=INTEGER}, #{postId,jdbcType=BIGINT}, #{commentId,jdbcType=BIGINT},
        #{userId,jdbcType=BIGINT}, #{status,jdbcType=BIT}, #{createdTime,jdbcType=TIMESTAMP},
        #{updatedTime,jdbcType=TIMESTAMP})
    </insert>
    <update id="updateByPrimaryKey" parameterType="com.fhypayaso.tittytainment.pojo.entity.Like">
        update ttmt_like
        set `type`       = #{type,jdbcType=INTEGER},
            post_id      = #{postId,jdbcType=BIGINT},
            comment_id   = #{commentId,jdbcType=BIGINT},
            user_id      = #{userId,jdbcType=BIGINT},
            `status`     = #{status,jdbcType=BIT},
            created_time = #{createdTime,jdbcType=TIMESTAMP},
            updated_time = #{updatedTime,jdbcType=TIMESTAMP}
        where id = #{id,jdbcType=BIGINT}
    </update>
    <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
        select id,
               `type`,
               post_id,
               comment_id,
               user_id,
               `status`,
               created_time,
               updated_time
        from ttmt_like
        where id = #{id,jdbcType=BIGINT}
    </select>

    <select id="selectByPostId" parameterType="map" resultMap="BaseResultMap">
        select id,
               `type`,
               post_id,
               comment_id,
               user_id,
               `status`,
               created_time,
               updated_time
        from ttmt_like
        where user_id = #{uid,jdbcType=BIGINT}
          and post_id = #{post_id,jdbcType=BIGINT}
    </select>

    <select id="selectByCommentId" parameterType="map" resultMap="BaseResultMap">
        select id,
               `type`,
               post_id,
               comment_id,
               user_id,
               `status`,
               created_time,
               updated_time
        from ttmt_like
        where user_id = #{uid,jdbcType=BIGINT}
          and comment_id = #{comment_id,jdbcType=BIGINT}
    </select>

    <select id="selectAll" resultMap="BaseResultMap">
        select id,
               `type`,
               post_id,
               comment_id,
               user_id,
               `status`,
               created_time,
               updated_time
        from ttmt_like
    </select>
</mapper>